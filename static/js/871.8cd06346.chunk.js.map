{"version":3,"file":"static/js/871.8cd06346.chunk.js","mappings":"+PAiDA,EA1CgB,WACd,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAWH,GAFlC,OAEUJ,EAFV,OAGIC,EAAQD,EAAKQ,SACbL,GAAW,GAJf,gDAMIM,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACP,KAGF,iBAAKQ,UAAU,eAAf,UACGZ,GAAQE,IACP,iCACE,qCACA,wBACGF,EAAKa,KAAI,SAAAC,GAAI,OACZ,2BACE,wBAAKA,EAAKC,UACV,uBAAID,EAAKE,YAFFF,EAAKV,GADF,UASlBJ,EAAKiB,QAAUf,IAAW,kDAGjC,C,+LCzCKgB,EAAM,gCACNC,EAAM,mCAECC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAA+CC,IAD1C,cACtBG,EADsB,yBAErBA,EAAStB,MAFY,2CAAH,qDAKduB,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gCAAwCC,EAAxC,kBAAqDK,IADnD,cACnBF,EADmB,yBAElBA,EAAStB,MAFS,2CAAH,sDAKXyB,EAAY,mCAAG,WAAMrB,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBd,EAAzB,oBAAuCe,EAAvC,MADG,cACpBG,EADoB,yBAEnBA,EAAStB,MAFU,2CAAH,sDAKZ0B,EAAO,mCAAG,WAAMtB,GAAN,uFACEiB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBd,EAAzB,4BAA+Ce,EAA/C,MADF,cACfG,EADe,yBAEdA,EAAStB,MAFK,2CAAH,sDAKPO,EAAU,mCAAG,WAAMH,GAAN,uFACDiB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBd,EAAzB,4BAA+Ce,EAA/C,MADC,cAClBG,EADkB,yBAEjBA,EAAStB,MAFQ,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/apiPack.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Reviews.css';\nimport PropTypes from 'prop-types';\nimport { GetReviews } from 'services/apiPack';\n\nconst Reviews = () => {\n  const [data, setData] = useState([]);\n  const [isValid, setIsValid] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await GetReviews(id);\n        setData(data.results);\n        setIsValid(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <div className=\"revContainer\">\n      {data && isValid && (\n        <>\n          <h3>Reviews</h3>\n          <ul>\n            {data.map(info => (\n              <li key={info.id}>\n                <h4>{info.author}</h4>\n                <p>{info.content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {!data.length && isValid && <h3>Thete is no rewievs</h3>}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  id: PropTypes.number,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/'; //\nconst KEY = 'f6ffe98b5dc08916d40352e501f3317f';\n\nexport const TrendingMovies = async () => {\n  const response = await axios.get(`${URL}trending/movie/week?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const SearchMovie = async search => {\n  const response = await axios.get(`${URL}search/movie?api_key=${KEY}&query=${search}`);\n  return response.data;\n};\n\nexport const GetMovieById = async id => {\n  const response = await axios.get(`${URL}movie/${id}?api_key=${KEY} `);\n  return response.data;\n};\n\nexport const GetCast = async id => {\n  const response = await axios.get(`${URL}movie/${id}/credits?api_key=${KEY} `);\n  return response.data;\n};\n\nexport const GetReviews = async id => {\n  const response = await axios.get(`${URL}movie/${id}/reviews?api_key=${KEY} `);\n  return response.data;\n};\n"],"names":["useState","data","setData","isValid","setIsValid","id","useParams","useEffect","GetReviews","results","console","log","fetchReviews","className","map","info","author","content","length","URL","KEY","TrendingMovies","axios","response","SearchMovie","search","GetMovieById","GetCast"],"sourceRoot":""}