{"version":3,"file":"static/js/494.8dc68e3d.chunk.js","mappings":"uQA+EA,EAxEqB,WAAO,IAAD,IACzB,GAAyBA,EAAAA,EAAAA,UAAS,MAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA0BF,GAA1B,iGAEuBG,EAAAA,EAAAA,IAAaH,GAFpC,OAEUI,EAFV,OAGIL,EAASK,GAHb,gDAKIC,QAAQC,IAAR,MALJ,yDADc,yBAAC,SAAD,2BASdC,CAAWP,EACZ,GAAE,CAACA,IAEN,IACMQ,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErC,OAEE,4BACE,SAAC,KAAD,CAASC,UAAU,SAASC,GAAIL,EAAhC,SACG,aAEFV,IACC,iBAAKc,UAAU,UAAf,WACE,gBACEA,UAAU,QACVE,IACEhB,EAAKiB,YAAL,2CACwCjB,EAAKiB,aAD7C,2FAIFC,IAAKlB,EAAKmB,SAEZ,iBAAKL,UAAU,SAAf,WACE,eAAIA,UAAU,YAAd,SAA2Bd,EAAKmB,SAChC,yCAAiBnB,EAAKoB,eAEtB,sCACA,uBAAIpB,EAAKqB,YAET,mCACCrB,EAAKsB,OAAOC,KAAI,SAAAC,GAAI,OACnB,cAAGV,UAAU,cAAb,SACGU,EAAKC,MADwBD,EAAKtB,GADlB,WAQ3B,iBAAKY,UAAU,UAAf,WACE,eAAIA,UAAU,eAAd,qCACA,2BACE,yBACE,SAAC,KAAD,CAASC,GAAG,OAAOH,MAAOV,EAA1B,qBAIF,yBACE,SAAC,KAAD,CAASa,GAAG,UAAUH,MAAOV,EAA7B,8BAMN,SAAC,KAAD,MAGL,C,+LC3EKwB,EAAM,gCACNC,EAAM,mCAECC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAA+CC,IAD1C,cACtBG,EADsB,yBAErBA,EAASxB,MAFY,2CAAH,qDAKdyB,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gCAAwCC,EAAxC,kBAAqDK,IADnD,cACnBF,EADmB,yBAElBA,EAASxB,MAFS,2CAAH,sDAKXD,EAAY,mCAAG,WAAMH,GAAN,uFACH2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBxB,EAAzB,oBAAuCyB,EAAvC,MADG,cACpBG,EADoB,yBAEnBA,EAASxB,MAFU,2CAAH,sDAKZ2B,EAAO,mCAAG,WAAM/B,GAAN,uFACE2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBxB,EAAzB,4BAA+CyB,EAA/C,MADF,cACfG,EADe,yBAEdA,EAASxB,MAFK,2CAAH,sDAKP4B,EAAU,mCAAG,WAAMhC,GAAN,uFACD2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBxB,EAAzB,4BAA+CyB,EAA/C,MADC,cAClBG,EADkB,yBAEjBA,EAASxB,MAFQ,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","services/apiPack.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport './MovieDetails.css';\nimport { GetMovieById } from 'services/apiPack';\nimport PropTypes from 'prop-types';\n\n\nconst MovieDetails = () => {\n  const [post, setPosts] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchMovie(id) {\n      try {\n        const data = await GetMovieById(id);\n        setPosts(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie(id);\n  }, [id]);\n\nconst location = useLocation()\nconst goBack = location.state?.from ?? '/';\n  \n  return (\n   \n    <div>\n      <NavLink className=\"goBack\" to={goBack}>\n        {'<Go Back'}\n      </NavLink>\n      {post && (\n        <div className=\"wripper\">\n          <img\n            className=\"image\"\n            src={\n              post.poster_path\n                ? ` https://image.tmdb.org/t/p/w500/${post.poster_path}`\n                : `https://www.lincolnelectric.com/-/media/project/website/image-not-found-outlines-41.ashx`\n            }\n            alt={post.title}\n          ></img>\n          <div className=\"titles\">\n            <h2 className=\"postTitle\">{post.title}</h2>\n            <h4>User scope: {post.popularity}</h4>\n\n            <h3>Overview</h3>\n            <p>{post.overview}</p>\n\n            <h3>Genres</h3>\n            {post.genres.map(genr => (\n              <p className=\"genresTitle\" key={genr.id}>\n                {genr.name}\n              </p>\n            ))}\n          </div>\n        </div>\n      )}\n      <div className=\"addInfo\">\n        <h4 className=\"addInfoTitle\">Additional information</h4>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={id}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={id}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\nMovieDetails.propTypes = {\n  id: PropTypes.number\n}","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/'; //\nconst KEY = 'f6ffe98b5dc08916d40352e501f3317f';\n\nexport const TrendingMovies = async () => {\n  const response = await axios.get(`${URL}trending/movie/week?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const SearchMovie = async search => {\n  const response = await axios.get(`${URL}search/movie?api_key=${KEY}&query=${search}`);\n  return response.data;\n};\n\nexport const GetMovieById = async id => {\n  const response = await axios.get(`${URL}movie/${id}?api_key=${KEY} `);\n  return response.data;\n};\n\nexport const GetCast = async id => {\n  const response = await axios.get(`${URL}movie/${id}/credits?api_key=${KEY} `);\n  return response.data;\n};\n\nexport const GetReviews = async id => {\n  const response = await axios.get(`${URL}movie/${id}/reviews?api_key=${KEY} `);\n  return response.data;\n};\n"],"names":["useState","post","setPosts","id","useParams","useEffect","GetMovieById","data","console","log","fetchMovie","goBack","useLocation","state","from","className","to","src","poster_path","alt","title","popularity","overview","genres","map","genr","name","URL","KEY","TrendingMovies","axios","response","SearchMovie","search","GetCast","GetReviews"],"sourceRoot":""}