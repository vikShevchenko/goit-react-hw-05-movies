{"version":3,"file":"static/js/867.98387b0d.chunk.js","mappings":"4OAsEA,EAhEkB,WAEd,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACOC,GAAKC,EAAAA,EAAAA,MAALD,GAEDE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAejB,OAVHC,EAAAA,EAAAA,YAAU,WACPC,EAAAA,EAAAA,IAAA,6CAC2CP,EAD3C,8CAECQ,MAAK,SAAAC,GACJZ,EAASY,EAAKA,KACf,IACAC,OAAM,SAAAZ,GAAK,OAAIC,EAASD,EAAb,GAEd,GAAC,CAACE,KAGE,4BACE,mBAAQW,UAAU,SAASC,QAhBjB,WACZR,EAASF,EAASW,MACnB,EAcG,qBAECjB,IACC,iBAAKe,UAAU,UAAf,WACE,gBAAKA,UAAU,QACbG,IAAG,2CAAsClB,EAAKmB,aAC9CC,IAAI,cAEN,iBAAKL,UAAU,SAAf,WACA,eAAIA,UAAU,YAAd,SAA2Bf,EAAKqB,SAChC,yCAAiBrB,EAAKsB,eAEtB,sCACA,uBAAItB,EAAKuB,YAET,mCACCvB,EAAKwB,OAAOC,KAAI,SAAAC,GAAI,OACnB,cAAGX,UAAU,cAAb,SAA0CW,EAAKC,MAAfD,EAAKtB,GADlB,UAMxBF,IAAS,wBAAKA,KACf,iBAAKa,UAAU,UAAf,WACI,eAAIA,UAAU,eAAd,qCACA,2BACI,yBAAI,SAAC,KAAD,CAASa,GAAG,OAAOX,MAAOb,EAA1B,qBACJ,yBAAI,SAAC,KAAD,CAASwB,GAAG,UAAUX,MAAOb,EAA7B,8BAGZ,SAAC,KAAD,MAGP,C","sources":["components/SinglePage/SinglePage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, NavLink, Outlet, useLocation} from \"react-router-dom\";\nimport axios from \"axios\";\nimport './SinglePage.css';\nimport PropTypes from 'prop-types';\n\nconst SinglePage =()=> {\n\n    const [post , setPosts] = useState(null);\n    const [error, setError] = useState(null);\n    const {id} =useParams();\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const goBack =()=> {\n      navigate(location.state)    \n    }\n\n useEffect(()=> {\n    axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=f6ffe98b5dc08916d40352e501f3317f`)\n    .then(data => {\n      setPosts(data.data) \n    })\n    .catch(error => setError(error))\n    \n },[id]);\n  \n    return (\n      <div>\n        <button className=\"button\" onClick={goBack}>Go Back</button>\n\n        {post && (\n          <div className=\"wripper\">\n            <img className=\"image\"\n              src={` https://image.tmdb.org/t/p/w500/${post.poster_path}`}\n              alt=\"imagFilm\"\n            ></img>\n            <div className=\"titles\">\n            <h2 className=\"postTitle\">{post.title}</h2>\n            <h4>User scope: {post.popularity}</h4>\n\n            <h3>Overview</h3>\n            <p>{post.overview}</p>\n\n            <h3>Genres</h3>\n            {post.genres.map(genr => (\n              <p className=\"genresTitle\" key={genr.id}>{genr.name}</p>\n            ))}\n            </div>\n          </div>\n        )}\n        {error && <h3>{error}</h3>}\n        <div className=\"addInfo\">\n            <h4 className=\"addInfoTitle\">Additional information</h4>\n            <ul>\n                <li><NavLink to='cast' state={id}>Cast</NavLink></li>\n                <li><NavLink to='reviews' state={id}>Reviews</NavLink></li>\n            </ul>\n        </div>  \n        <Outlet /> \n      </div>\n    );\n}\nSinglePage.propTypes = {\n  id: PropTypes.number,\n  location: PropTypes.shape({\n    state: PropTypes.string\n  })\n}\nexport default SinglePage"],"names":["useState","post","setPosts","error","setError","id","useParams","location","useLocation","navigate","useNavigate","useEffect","axios","then","data","catch","className","onClick","state","src","poster_path","alt","title","popularity","overview","genres","map","genr","name","to"],"sourceRoot":""}